{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/admin/admin.module.ts","./src/app/admin/components/admin-orders/admin-orders.component.html","./src/app/admin/components/admin-orders/admin-orders.component.ts","./src/app/admin/components/admin-products/admin-products.component.html","./src/app/admin/components/admin-products/admin-products.component.ts","./src/app/admin/components/product-form/product-form.component.html","./src/app/admin/components/product-form/product-form.component.ts","./src/app/admin/services/admin-auth-guard.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/bs-navbar/bs-navbar.component.html","./src/app/bs-navbar/bs-navbar.component.ts","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/app/shared/components/order-detail/order-detail.component.html","./src/app/shared/components/order-detail/order-detail.component.ts","./src/app/shared/components/product-card/product-card.component.html","./src/app/shared/components/product-card/product-card.component.ts","./src/app/shared/components/product-quantity/product-quantity.component.html","./src/app/shared/components/product-quantity/product-quantity.component.ts","./src/app/shared/models/order.ts","./src/app/shared/models/shopping-cart-item.ts","./src/app/shared/models/shopping-cart.ts","./src/app/shared/services/auth-guard.service.ts","./src/app/shared/services/auth.service.ts","./src/app/shared/services/category.service.ts","./src/app/shared/services/order.service.ts","./src/app/shared/services/product.service.ts","./src/app/shared/services/shopping-cart.service.ts","./src/app/shared/services/user.service.ts","./src/app/shared/shared.module.ts","./src/app/shopping/components/check-out/check-out.component.html","./src/app/shopping/components/check-out/check-out.component.ts","./src/app/shopping/components/my-orders/my-orders.component.html","./src/app/shopping/components/my-orders/my-orders.component.ts","./src/app/shopping/components/order-success/order-success.component.html","./src/app/shopping/components/order-success/order-success.component.ts","./src/app/shopping/components/products/product-filter/product-filter.component.html","./src/app/shopping/components/products/product-filter/product-filter.component.ts","./src/app/shopping/components/products/products.component.html","./src/app/shopping/components/products/products.component.ts","./src/app/shopping/components/shipping-form/shipping-form.component.html","./src/app/shopping/components/shipping-form/shipping-form.component.ts","./src/app/shopping/components/shopping-cart-summary/shopping-cart-summary.component.html","./src/app/shopping/components/shopping-cart-summary/shopping-cart-summary.component.ts","./src/app/shopping/components/shopping-cart/shopping-cart.component.html","./src/app/shopping/components/shopping-cart/shopping-cart.component.ts","./src/app/shopping/shopping.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { SharedModule } from './../shared/shared.module';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdminOrdersComponent } from './components/admin-orders/admin-orders.component';\nimport { AdminProductsComponent } from './components/admin-products/admin-products.component';\nimport { ProductFormComponent } from './components/product-form/product-form.component';\nimport { AdminAuthGuardService } from './services/admin-auth-guard.service';\nimport { DataTableModule } from 'angular5-data-table';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuardService } from '../shared/services/auth-guard.service';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CustomFormsModule } from 'ngx-custom-validators';\n\n@NgModule({\n  declarations: [\n    AdminOrdersComponent,\n    AdminProductsComponent,\n    ProductFormComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule,\n    DataTableModule,\n    CustomFormsModule,\n    NgbModule,\n    RouterModule.forChild([\n      {\n        path: 'admin/products/new',\n        component: ProductFormComponent,\n        canActivate: [AuthGuardService, AdminAuthGuardService]\n      },\n      {\n        path: 'admin/products/:id',\n        component: ProductFormComponent,\n        canActivate: [AuthGuardService, AdminAuthGuardService]\n      },\n      {\n        path: 'admin/products',\n        component: AdminProductsComponent,\n        canActivate: [AuthGuardService, AdminAuthGuardService]\n      },\n      {\n        path: 'admin/orders',\n        component: AdminOrdersComponent,\n        canActivate: [AuthGuardService, AdminAuthGuardService]\n      }\n    ])\n  ],\n  providers: [AdminAuthGuardService]\n})\nexport class AdminModule {}\n","<!-- <h1>Orders</h1>\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Customer</th>\n      <th>Date</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let order of orders\">\n      <th>{{ order.shipping.name }}</th>\n      <th>{{ order.datePlaced | date }}</th>\n      <th>\n        <a href=\"#\">View</a>\n      </th>\n    </tr>\n  </tbody>\n</table> -->\n\n<h3>Orders</h3>\n<div *ngIf=\"orders$ | async as orders\">\n  <ng-container *ngIf=\"orders.length > 0; else noOrder\">\n    <!-- <table class=\"table table-hover table-bordered\"> -->\n    <table class=\"table table-hover\">\n      <thead>\n        <tr>\n          <th>Customer</th>\n          <th>Address</th>\n          <th>Order Date</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let order of orders\">\n          <td>{{ order.shipping.name }}</td>\n          <td>\n            {{ order.shipping.address1\n            }}<span *ngIf=\"order.shipping.address2\"\n              >, {{ order.shipping.address2 }}</span\n            >\n          </td>\n          <td>{{ order.datePlaced | date: \"medium\" }}</td>\n          <td>\n            <div class=\"btn-group\">\n              <a\n                [routerLink]=\"['/order-detail', order.key]\"\n                class=\"btn btn-sm btn-primary\"\n              >\n                <i class=\"fa fa-eye\"></i>\n              </a>\n              <button\n                (click)=\"deleteOrder(order)\"\n                class=\"btn btn-sm btn-danger\"\n              >\n                <i class=\"fa fa-trash\"></i>\n              </button>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n\n<ng-template #noOrder>\n  <p class=\"alert alert-info\">There are no orders currently</p>\n</ng-template>\n","import { OrderService } from '../../../shared/services/order.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Order } from '../../../shared/models/order';\n\n@Component({\n  selector: 'app-admin-orders',\n  templateUrl: './admin-orders.component.html',\n  styleUrls: ['./admin-orders.component.css']\n})\nexport class AdminOrdersComponent implements OnInit {\n  orders$;\n\n  constructor(private orderService: OrderService) {}\n\n  ngOnInit() {\n    this.orders$ = this.orderService.getOrders();\n  }\n\n  deleteOrder(order: Order) {\n    this.orderService.deleteOrder(order.key).then(data => {\n      console.log(data);\n    });\n  }\n}\n","<p>\n  <a routerLink=\"/admin/products/new\" class=\"btn btn-primary\">New Product</a>\n</p>\n<p>\n  <input\n    #query\n    (keyup)=\"filter(query.value)\"\n    class=\"form-control\"\n    type=\"text\"\n    placeholder=\"Search...\"\n  />\n</p>\n\n<!-- <ngx-datatable\n  class=\"material\"\n  [columnMode]=\"ColumnMode.flex\"\n  [headerHeight]=\"50\"\n  [footerHeight]=\"50\"\n  rowHeight=\"auto\"\n  [rows]=\"rows\"\n>\n  <ngx-datatable-column property=\"title\" [flexGrow]=\"3\">\n    <ng-template let-value=\"product\" ngx-datatable-cell-template>\n      {{ product.title }}\n    </ng-template>\n  </ngx-datatable-column>\n  <ngx-datatable-column property=\"price\" [flexGrow]=\"1\">\n    <ng-template let-value=\"product\" ngx-datatable-cell-template>\n      {{ product.price | currency: \"USD\" }}\n    </ng-template>\n  </ngx-datatable-column>\n   <ngx-datatable-column name=\"Age\" [flexGrow]=\"1\">\n    <ng-template let-value=\"product\" ngx-datatable-cell-template>\n      {{ value }}\n    </ng-template>\n  </ngx-datatable-column> -->\n<!-- </ngx-datatable> -->\n\n<data-table\n  [items]=\"items\"\n  [itemCount]=\"itemCount\"\n  (reload)=\"reloadItems($event)\"\n>\n  <data-table-column\n    [property]=\"'title'\"\n    [header]=\"'Title'\"\n    [sortable]=\"true\"\n    [resizable]=\"true\"\n  >\n  </data-table-column>\n\n  <data-table-column\n    [property]=\"'price'\"\n    [header]=\"'Price'\"\n    [sortable]=\"true\"\n    [resizable]=\"true\"\n  >\n    <ng-template #dataTableCell let-item=\"item\">\n      {{ item.price }}\n    </ng-template>\n  </data-table-column>\n\n  <data-table-column [property]=\"'$key'\">\n    <ng-template #dataTableCell let-item=\"item\">\n      <a [routerLink]=\"['/admin/products/', item.key]\">Edit</a>\n    </ng-template>\n  </data-table-column>\n</data-table>\n\n<!-- <table class=\"table\">\n  <thead>\n    <tr>\n      <th>Title</th>\n      <th>Price</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let p of filteredProducts\">\n      <td>{{ p.title }}</td>\n      <td>{{ p.price }}</td>\n      <td>\n        \n      </td>\n    </tr>\n  </tbody>\n</table> -->\n","import { Product } from '../../../shared/models/product';\nimport { ProductService } from '../../../shared/services/product.service';\nimport { Component, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { DataTableResource } from 'angular5-data-table';\n\n@Component({\n  selector: 'app-admin-products',\n  templateUrl: './admin-products.component.html',\n  styleUrls: ['./admin-products.component.css']\n})\nexport class AdminProductsComponent implements OnDestroy {\n  products: Product[];\n  subscription: Subscription;\n  tableResource: DataTableResource<Product>;\n  items: Product[] = [];\n  itemCount: number;\n\n  constructor(private productService: ProductService) {\n    this.subscription = this.productService\n      .getAll()\n      .subscribe((products: Product[]) => {\n        this.products = products;\n\n        this.initializeTable(products);\n      });\n  }\n\n  private initializeTable(products: Product[]) {\n    this.tableResource = new DataTableResource(products);\n    this.tableResource.query({ offset: 0 }).then(items => (this.items = items));\n    this.tableResource.count().then(count => (this.itemCount = count));\n  }\n\n  reloadItems(params) {\n    if (!this.tableResource) return;\n\n    this.tableResource.query(params).then(items => (this.items = items));\n  }\n\n  filter(query: string) {\n    let filteredProducts = query\n      ? this.products.filter(p =>\n          p.title.toLowerCase().includes(query.toLocaleLowerCase())\n        )\n      : this.products;\n\n    this.initializeTable(filteredProducts);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6\">\n    <form #f=\"ngForm\" (ngSubmit)=\"save(f.value)\">\n      <div class=\"form-group\">\n        <label for=\"title\">Title</label>\n        <input\n          #title=\"ngModel\"\n          [(ngModel)]=\"product.title\"\n          name=\"title\"\n          id=\"title\"\n          type=\"text\"\n          class=\"form-control\"\n          required\n        />\n        <div *ngIf=\"title.touched && title.invalid\" class=\"alert alert-danger\">\n          Title is required.\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"price\">Price</label>\n        <div class=\"input-group mb-3\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">$</span>\n          </div>\n          <input\n            #price=\"ngModel\"\n            [(ngModel)]=\"product.price\"\n            name=\"price\"\n            id=\"price\"\n            type=\"number\"\n            class=\"form-control\"\n            required\n            [gte]=\"0\"\n          />\n        </div>\n        <div *ngIf=\"price.touched && price.invalid\" class=\"alert alert-danger\">\n          <div *ngIf=\"price.errors?.required\">\n            Price is required.\n          </div>\n          <div *ngIf=\"price.errors?.gte\">\n            Price should be 0 or higher.\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"category\">Category</label>\n        <select\n          #category=\"ngModel\"\n          [(ngModel)]=\"product.category\"\n          name=\"category\"\n          id=\"category\"\n          class=\"form-control\"\n          required\n        >\n          <option value=\"\"></option>\n          <option *ngFor=\"let c of categories$ | async\">\n            {{ c.payload.val().name }}\n          </option>\n        </select>\n        <div\n          *ngIf=\"category.touched && category.invalid\"\n          class=\"alert alert-danger\"\n        >\n          Category is required.\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"imageUrl\">Image Url</label>\n        <input\n          #imageUrl=\"ngModel\"\n          [(ngModel)]=\"product.imageUrl\"\n          name=\"imageUrl\"\n          id=\"imageUrl\"\n          type=\"text\"\n          class=\"form-control\"\n          required\n          url\n        />\n        <div\n          *ngIf=\"imageUrl.touched && imageUrl.invalid\"\n          class=\"alert alert-danger\"\n        >\n          <div *ngIf=\"imageUrl.errors?.required\">\n            Image Url is required.\n          </div>\n          <div *ngIf=\"imageUrl.errors?.url\">\n            Please enter a valid URL.\n          </div>\n        </div>\n      </div>\n      <button class=\"btn btn-primary\">Save</button>\n      <button type=\"button\" (click)=\"delete()\" class=\"btn btn-danger\">\n        Delete\n      </button>\n    </form>\n  </div>\n\n  <div class=\"col-md-6\">\n    <product-card [product]=\"product\" [show-actions]=\"false\"></product-card>\n  </div>\n</div>\n","import { ProductService } from '../../../shared/services/product.service';\nimport { CategoryService } from '../../../shared/services/category.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-product-form',\n  templateUrl: './product-form.component.html',\n  styleUrls: ['./product-form.component.css']\n})\nexport class ProductFormComponent implements OnInit {\n  categories$;\n  product: any = {};\n  id;\n\n  constructor(\n    categoryService: CategoryService,\n    private productService: ProductService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n    this.categories$ = categoryService.getAll();\n\n    this.id = this.route.snapshot.paramMap.get('id');\n    if (this.id)\n      this.productService.get(this.id).subscribe(p => (this.product = p));\n  }\n\n  save(product) {\n    if (this.id) this.productService.update(this.id, product);\n    else this.productService.create(product);\n\n    this.router.navigate(['/admin/products']);\n  }\n\n  delete() {\n    if (!confirm('Are you sure you want to delete this product?')) return;\n    this.productService.delete(this.id);\n    this.router.navigate(['/admin/products']);\n  }\n  ngOnInit(): void {}\n}\n","import { AppUser } from '../../shared/models/app-user';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../../shared/services/user.service';\nimport { CanActivate } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { map, switchMap } from 'rxjs/operators';\nimport { AuthService } from '../../shared/services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminAuthGuardService implements CanActivate {\n  constructor(private auth: AuthService) {}\n\n  canActivate(): Observable<boolean> {\n    return this.auth.appUser$.pipe(map(appUser => appUser.isAdmin));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<bs-navbar></bs-navbar>\n\n<main role=\"main\" class=\"container\">\n  <router-outlet></router-outlet>\n</main>\n","import { UserService } from './shared/services/user.service';\nimport { Router, Route } from '@angular/router';\nimport { AuthService } from './shared/services/auth.service';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(userService: UserService, auth: AuthService, Router: Router) {\n    auth.user$.subscribe(user => {\n      if (!user) return;\n\n      userService.save(user);\n\n      let returnUrl = localStorage.getItem('returnUrl');\n      if (!returnUrl) return;\n      localStorage.removeItem('returnUrl');\n\n      Router.navigateByUrl(returnUrl);\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { AngularFireModule } from '@angular/fire';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\n\nimport { environment } from './../environments/environment';\nimport { AdminModule } from './admin/admin.module';\nimport { AdminAuthGuardService } from './admin/services/admin-auth-guard.service';\nimport { AppComponent } from './app.component';\nimport { BsNavbarComponent } from './bs-navbar/bs-navbar.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { SharedModule } from './shared/shared.module';\nimport { ProductsComponent } from './shopping/components/products/products.component';\nimport { ShoppingModule } from './shopping/shopping.module';\n\n// import { NgxDatatableModule } from '@swimlane/ngx-datatable';\n@NgModule({\n  declarations: [\n    AppComponent,\n    BsNavbarComponent,\n    HomeComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    SharedModule,\n    AdminModule,\n    ShoppingModule,\n    RouterModule.forRoot([\n      { path: '', component: ProductsComponent },\n      { path: 'login', component: LoginComponent }\n    ]),\n    AngularFireModule.initializeApp(environment.firebase)\n  ],\n  providers: [AdminAuthGuardService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","<nav class=\"navbar navbar-expand-md navbar-light bg-light fixed-top\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\"\n      >OrganicCart\n      <i class=\"fa fa-leaf\" aria-hidden=\"true\"></i>\n    </a>\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      data-toggle=\"collapse\"\n      data-target=\"#navbarsExampleDefault\"\n      aria-controls=\"navbarsExampleDefault\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n      <ul class=\"navbar-nav ml-auto\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/shopping-cart\">\n            <i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i>\n            <span\n              class=\"badge badge-warning badge-pill\"\n              *ngIf=\"cart$ | async as cart\"\n            >\n              {{ cart.totalItemsCount }}\n            </span>\n          </a>\n        </li>\n        <ng-template #anonymousUser>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/login\">Login</a>\n          </li>\n        </ng-template>\n        <li\n          *ngIf=\"appUser; else anonymousUser\"\n          ngbDropdown\n          class=\"nav-item dropdown\"\n        >\n          <a\n            ngbDropdownToggle\n            class=\"nav-link dropdown-toggle\"\n            id=\"dropdown01\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n            >{{ appUser.name }}</a\n          >\n          <div\n            ngbDropdownMenu\n            class=\"dropdown-menu\"\n            aria-labelledby=\"dropdown01\"\n          >\n            <a class=\"dropdown-item\" routerLink=\"/my/orders\">My Orders</a>\n            <ng-container *ngIf=\"appUser.isAdmin\">\n              <a class=\"dropdown-item\" routerLink=\"admin/orders\"\n                >Manage Orders</a\n              >\n              <a class=\"dropdown-item\" routerLink=\"admin/products\"\n                >Manage Products</a\n              >\n            </ng-container>\n            <a (click)=\"logOut()\" class=\"dropdown-item\">Log Out</a>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import { ShoppingCartService } from '../shared/services/shopping-cart.service';\nimport { AppUser } from '../shared/models/app-user';\nimport { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ShoppingCart } from '../shared/models/shopping-cart';\nimport { AuthService } from '../shared/services/auth.service';\n\n@Component({\n  selector: 'bs-navbar',\n  templateUrl: './bs-navbar.component.html',\n  styleUrls: ['./bs-navbar.component.css']\n})\nexport class BsNavbarComponent implements OnInit {\n  appUser: AppUser;\n  cart$: Observable<ShoppingCart>;\n  constructor(\n    private auth: AuthService,\n    private shoppingCartService: ShoppingCartService\n  ) {}\n\n  async ngOnInit() {\n    this.auth.appUser$.subscribe(appUser => (this.appUser = appUser));\n    // let cart$ = await this.shoppingCartService.getCart();\n    // cart$.subscribe(cart => {\n    //   this.ShoppingCartItemCount = 0;\n    //   for (let productId in cart.items){\n    //     this.ShoppingCartItemCount += cart.items[productId].quantity;\n    //   }\n    // });\n    this.cart$ = await this.shoppingCartService.getCart();\n  }\n  logOut() {\n    this.auth.logOut();\n  }\n}\n","<button (click)=\"login()\" class=\"btn btn-primary\">Login with Google</button>\n","import { Component } from '@angular/core';\nimport { AuthService } from '../shared/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  constructor(private auth: AuthService) {}\n\n  login() {\n    this.auth.login();\n  }\n}\n","<div class=\"row col-lg-10 offset-lg-1\" *ngIf=\"order$ | async as order\">\n  <div class=\"col-md-6\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <h4 class=\"card-title\">Shipping Detail</h4>\n        <ul class=\"list-group list-group-flush\">\n          <li class=\"list-group-item\">Name: {{ order.shipping.name }}</li>\n          <li class=\"list-group-item\">\n            Address: {{ order.shipping.address1\n            }}<span *ngIf=\"order.shipping.address2\"\n              >, {{ order.shipping.address2 }}</span\n            >\n          </li>\n          <li class=\"list-group-item\">City: {{ order.shipping.city }}</li>\n        </ul>\n      </div>\n    </div>\n    <button\n      (click)=\"navigateBack()\"\n      type=\"button\"\n      class=\"btn btn-light btn-block my-3\"\n    >\n      <i class=\"fa fa-arrow-left mr-1\"></i> Back to Orders\n    </button>\n  </div>\n\n  <div class=\"col-md-6\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <h4 class=\"card-title\">Order Summary</h4>\n        <ul class=\"list-group list-group-flush\">\n          <li *ngFor=\"let item of order.items\" class=\"list-group-item\">\n            {{ item.quantity }} x {{ item.product.title }}\n            <div class=\"float-right\">\n              {{\n                item.product.price * item.quantity | currency: \"USD\":\"symbol\"\n              }}\n            </div>\n          </li>\n          <!-- <li class=\"list-group-item font-weight-bold\">\n            Total\n            <div class=\"float-right\">\n              {{ item.totalPrice | currency: \"USD\" }}\n            </div>\n          </li> -->\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { OrderService } from '../../services/order.service';\n\n@Component({\n  selector: 'app-order-detail',\n  templateUrl: './order-detail.component.html',\n  styleUrls: ['./order-detail.component.css']\n})\nexport class OrderDetailComponent implements OnInit {\n  orderId: string;\n  order$;\n  item;\n  constructor(\n    private orderService: OrderService,\n    private route: ActivatedRoute,\n    private location: Location\n  ) {}\n\n  ngOnInit(): void {\n    this.orderId = this.route.snapshot.paramMap.get('id');\n    this.order$ = this.orderService.getOrderById(this.orderId);\n  }\n\n  navigateBack() {\n    this.location.back();\n  }\n\n  // total(totalPrice) {\n  //   let sum = 0;\n  //   sum += this.total()\n\n  //   return sum;\n  // }\n}\n","<div *ngIf=\"product.title\" class=\"card\">\n  <img\n    *ngIf=\"product.imageUrl\"\n    [src]=\"product.imageUrl\"\n    class=\"card-img-top\"\n    alt=\"product.title\"\n  />\n  <div class=\"card-body\">\n    <h5 class=\"card-title\">{{ product.title }}</h5>\n    <p class=\"card-text\">{{ product.price | currency: \"USD\" }}</p>\n  </div>\n  <div *ngIf=\"showActions && shoppingCart\">\n    <button\n      *ngIf=\"shoppingCart.getQuantity(product) === 0; else updateQuantity\"\n      (click)=\"addToCart()\"\n      class=\"btn btn-primary btn-block\"\n    >\n      Add to Cart\n    </button>\n    <ng-template #updateQuantity>\n      <product-quantity\n        [product]=\"product\"\n        [shopping-cart]=\"shoppingCart\"\n      ></product-quantity>\n    </ng-template>\n  </div>\n</div>\n","import { ShoppingCartService } from '../../services/shopping-cart.service';\nimport { Product } from '../../models/product';\nimport { Component, Input } from '@angular/core';\nimport { ShoppingCart } from '../../models/shopping-cart';\n\n@Component({\n  selector: 'product-card',\n  templateUrl: './product-card.component.html',\n  styleUrls: ['./product-card.component.css']\n})\nexport class ProductCardComponent {\n  @Input('product') product;\n  @Input('show-actions') showActions = true;\n  @Input('shopping-cart') shoppingCart: ShoppingCart;\n\n  constructor(private cartService: ShoppingCartService) {}\n\n  addToCart() {\n    this.cartService.addToCart(this.product);\n  }\n}\n","<div class=\"row card-row-footer\">\n  <button (click)=\"removeFromCart()\" class=\"btn btn-info col-3\">-</button>\n  <div class=\"col\">{{ shoppingCart.getQuantity(product) }} in cart</div>\n  <button (click)=\"addToCart()\" class=\"btn btn-info col-3\">\n    +\n  </button>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ShoppingCartService } from '../../services/shopping-cart.service';\n\n@Component({\n  selector: 'product-quantity',\n  templateUrl: './product-quantity.component.html',\n  styleUrls: ['./product-quantity.component.css']\n})\nexport class ProductQuantityComponent {\n  @Input('product') product;\n  @Input('shopping-cart') shoppingCart;\n\n  constructor(private cartService: ShoppingCartService) {}\n\n  addToCart() {\n    this.cartService.addToCart(this.product);\n  }\n\n  removeFromCart() {\n    this.cartService.removeFromCart(this.product);\n  }\n}\n","import { ShoppingCart } from './shopping-cart';\nexport class Order {\n  datePlaced: number;\n  items: any[];\n  key: string;\n\n  constructor(\n    public userId: string,\n    public shipping: any,\n    shoppingCart: ShoppingCart\n  ) {\n    this.datePlaced = new Date().getTime();\n\n    this.items = shoppingCart.items.map(i => {\n      return {\n        product: {\n          title: i.title,\n          imageUrl: i.imageUrl,\n          price: i.price\n        },\n        quantity: i.quantity,\n        totalPrice: i.totalPrice\n      };\n    });\n  }\n}\n","export class ShoppingCartItem {\n  key: string;\n  title: string;\n  imageUrl: string;\n  price: number;\n  quantity: number;\n\n  constructor(init?: Partial<ShoppingCartItem>) {\n    Object.assign(this, init);\n  }\n\n  get totalPrice() {\n    return this.price * this.quantity;\n  }\n}\n","import { Product } from './product';\nimport { ShoppingCartItem } from './shopping-cart-item';\n\nexport class ShoppingCart {\n  items: ShoppingCartItem[] = []; // Since we're using the push method, initializing to an empty array to avoid null exception error\n\n  constructor(private itemsMap: { [productId: string]: ShoppingCartItem }) {\n    itemsMap = itemsMap || {};\n\n    // tslint:disable-next-line: forin\n    for (let productId in itemsMap) {\n      let item = itemsMap[productId];\n      this.items.push(new ShoppingCartItem({ ...item, key: productId })); // Objects that we get from firebase, so we map to shopping-cart-item object\n    }\n  }\n\n  getQuantity(product: Product) {\n    if (!this.itemsMap)\n      // This is required here(was not added by Mosh) to prevent null ref error when the product card componenet\n      return 0;\n    // checks the quantity of every item and renders the big 'Add to cart' button or the qty in the cart\n\n    let item = this.itemsMap[product.key];\n    return item ? item.quantity : 0;\n  }\n\n  get totalItemsCount() {\n    let count = 0;\n    for (const productId in this.itemsMap)\n      count += this.itemsMap[productId].quantity;\n\n    return count;\n  }\n\n  get totalPrice() {\n    let sum = 0;\n    for (let productId in this.items) sum += this.items[productId].totalPrice;\n\n    return sum;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n  constructor(private auth: AuthService, private router: Router) {}\n\n  canActivate(route, state: RouterStateSnapshot) {\n    return this.auth.user$.pipe(\n      map(user => {\n        if (user) return true;\n\n        this.router.navigate(['/login'], {\n          queryParams: { returnUrl: state.url }\n        });\n        return false;\n      })\n    );\n  }\n}\n","import { AngularFireAuth } from '@angular/fire/auth';\nimport { Injectable } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport { Observable, of } from 'rxjs';\nimport { Route, ActivatedRoute } from '@angular/router';\nimport { AppUser } from '../models/app-user';\nimport { switchMap } from 'rxjs/operators';\nimport { UserService } from './user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  user$: Observable<firebase.User>;\n  constructor(\n    private afAuth: AngularFireAuth,\n    private route: ActivatedRoute,\n    private userService: UserService\n  ) {\n    this.user$ = afAuth.authState;\n  }\n\n  login() {\n    let returnUrl = this.route.snapshot.queryParamMap.get('returnUrl') || '/';\n    localStorage.setItem('returnUrl', returnUrl);\n    this.afAuth.signInWithRedirect(new firebase.auth.GoogleAuthProvider());\n  }\n\n  logOut() {\n    this.afAuth.signOut();\n  }\n\n  get appUser$(): Observable<AppUser> {\n    return this.user$.pipe(\n      switchMap(user => {\n        if (user) return this.userService.get(user.uid).valueChanges();\n\n        return of(null);\n      })\n    );\n  }\n}\n","import { AngularFireDatabase } from '@angular/fire/database';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n  constructor(private db: AngularFireDatabase) {}\n\n  getAll() {\n    return this.db.list('/categories').snapshotChanges();\n  }\n\n  // getAll() {\n  //   return this.db\n  //     .list('categories', reference => reference.orderByChild('name'))\n  //     .snapshotChanges() // include snapshot itself (access to key property)\n  //     .pipe(\n  //       map(metadata =>\n  //         metadata.map(data => ({\n  //           key: data.payload.key,\n  //           ...data.payload.val()\n  //         }))\n  //       )\n  //     );\n  // }\n}\n","import { ShoppingCartService } from './shopping-cart.service';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { ShoppingCartItem } from '../models/shopping-cart-item';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n  constructor(\n    private db: AngularFireDatabase,\n    private shoppingCartService: ShoppingCartService\n  ) {}\n\n  async placeOrder(order) {\n    let result = await this.db.list('/orders').push(order);\n    this.shoppingCartService.clearCart();\n    return result;\n  }\n\n  // getOrders() {\n  //   return this.db\n  //     .list('/orders')\n  //     .snapshotChanges()\n  //     .pipe(\n  //       map(data => {\n  //         return data.map(action => {\n  //           let key = action.payload.key;\n  //           let data = { key, ...action.payload.val() };\n  //           return data;\n  //         });\n  //       })\n  //     );\n  // }\n\n  getOrders() {\n    return this.db.list('/order').valueChanges();\n  }\n\n  getOrdersByUser(userId: string) {\n    return this.db\n      .list('/orders', query => query.orderByChild('userId').equalTo(userId))\n      .valueChanges();\n  }\n\n  // getOrdersByUser(userId: string) {\n  //   return this.db\n  //     .list('/orders', ref => ref.orderByChild('userId').equalTo(userId))\n  //     .snapshotChanges()\n  //     .pipe(\n  //       map(data => {\n  //         return data.map(action => {\n  //           let key = action.payload.key;\n  //           let data = { key, ...action.payload.val() };\n  //           return data;\n  //         });\n  //       })\n  //     );\n  // }\n\n  getOrderById(orderId: string) {\n    return this.db.object('/orders/' + orderId).valueChanges();\n  }\n\n  deleteOrder(id: string) {\n    return this.db.list('/orders/' + id).remove();\n  }\n}\n","import { AngularFireDatabase } from '@angular/fire/database';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Product } from '../models/product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  constructor(private db: AngularFireDatabase) {}\n\n  create(product) {\n    return this.db.list('/products').push(product);\n  }\n\n  // getAll() {\n  //   return this.db\n  //     .list('/products')\n  //     .snapshotChanges()\n  //     .pipe(\n  //       map((products: any[]) =>\n  //         products.map(prod => {\n  //           let payload = prod.payload.val();\n  //           let key = prod.key;\n  //           return <any>{ key, ...payload };\n  //         })\n  //       )\n  //     );\n  // }\n\n  getAll(): Observable<Product[]> {\n    return this.db\n      .list<Product>('/products')\n      .snapshotChanges()\n      .pipe(\n        map(actions =>\n          actions.map(a => ({ key: a.payload.key, ...a.payload.val() }))\n        )\n      );\n  }\n\n  get(productId) {\n    return this.db.object('/products/' + productId).valueChanges();\n  }\n\n  update(productId, product) {\n    return this.db.object('/products/' + productId).update(product);\n  }\n\n  delete(productId) {\n    return this.db.object('/products/' + productId).remove();\n  }\n}\n","import { AngularFireDatabase, AngularFireObject } from '@angular/fire/database';\nimport { Injectable } from '@angular/core';\nimport { Product } from '../models/product';\nimport { take, map } from 'rxjs/operators';\nimport { ShoppingCart } from '../models/shopping-cart';\nimport { Observable } from 'rxjs';\nimport { ShoppingCartItem } from '../models/shopping-cart-item';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShoppingCartService {\n  // item$;\n\n  constructor(private db: AngularFireDatabase) {}\n\n  async getCart(): Promise<Observable<ShoppingCart>> {\n    let cartId = await this.getOrCreateCartId();\n    return this.db\n      .object('/shopping-carts/' + cartId)\n      .snapshotChanges()\n      .pipe(map(x => new ShoppingCart(x.payload.exportVal().items)));\n  }\n\n  async addToCart(product: Product) {\n    this.updateItem(product, 1);\n  }\n\n  async removeFromCart(product: Product) {\n    this.updateItem(product, -1);\n  }\n\n  async clearCart() {\n    let cartId = await this.getOrCreateCartId();\n    this.db.object('/shopping-carts/' + cartId + '/items').remove();\n  }\n\n  private create() {\n    return this.db\n      .list('/shopping-carts')\n      .push({ dateCreated: new Date().getTime() });\n  }\n\n  private getItem(cartId: string, productId: string) {\n    return this.db.object<any>(\n      '/shopping-carts/' + cartId + '/items/' + productId\n    );\n  }\n  // private getOrCreateCart() {\n  //   let cartId = localStorage.getItem('cartId');\n  //   if (!cartId) {\n  //     this.create().then(result => {\n  //       localStorage.setItem('cartId', result.key);\n  //       return this.getCart(result.key);\n  //     });\n  //   } else return this.getCart(cartId);\n  // }\n\n  private async getOrCreateCartId() {\n    let cartId = localStorage.getItem('cartId');\n    if (cartId) return cartId;\n\n    let result = await this.create();\n    localStorage.setItem('cartId', result.key);\n    return result.key;\n  }\n\n  private async updateItem(product: Product, change: number) {\n    let cartId = await this.getOrCreateCartId();\n    let item$ = this.getItem(cartId, product.key);\n\n    item$\n      .valueChanges()\n      .pipe(take(1))\n      .subscribe((data: ShoppingCartItem) => {\n        let quantity = (data ? data.quantity || 0 : 0) + change; // Used || to avoid null reference error\n\n        if (!quantity) item$.remove();\n        else\n          item$.update({\n            title: product.title,\n            imageUrl: product.imageUrl,\n            price: product.price,\n            quantity\n          });\n      });\n  }\n}\n// async addToCart(product: Product) {\n//   let cartId = await this.getOrCreateCartId();\n//   let item$ = this.getItem(cartId, product.key);\n\n//   item$\n//     .valueChanges() // convert firebase object to observable\n//     .pipe(take(1)) // take 1 instance of an item\n//     .subscribe((item: any) => {\n//       // $exists() is deprecated. Just check if item is truthy.\n//        if(item)\n//           item$.update({ quantity: item.quantity + 1 });\n//       // since key and value are the same (eg, product: product) you can omit the value part.\n//        else item$.set({product, quantity: 1 });\n//    });\n// }\n","import { AngularFireDatabase, AngularFireObject } from '@angular/fire/database';\nimport { AppUser } from '../models/app-user';\nimport { Injectable } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  constructor(private db: AngularFireDatabase) {}\n\n  save(user: firebase.User) {\n    this.db.object('/users/' + user.uid).update({\n      name: user.displayName,\n      email: user.email\n    });\n  }\n\n  get(uid: string): AngularFireObject<AppUser> {\n    return this.db.object('/users/' + uid);\n  }\n\n  // get(uid: string): Observable<AppUser> {\n  //   return this.db.object<AppUser>('/users/' + uid).valueChanges();\n  // }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { DataTableModule } from 'angular5-data-table';\nimport { CustomFormsModule } from 'ngx-custom-validators';\n\nimport { AppRoutingModule } from '../app-routing.module';\nimport { ProductCardComponent } from './components/product-card/product-card.component';\nimport { ProductQuantityComponent } from './components/product-quantity/product-quantity.component';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { AuthService } from './services/auth.service';\nimport { CategoryService } from './services/category.service';\nimport { OrderService } from './services/order.service';\nimport { ProductService } from './services/product.service';\nimport { ShoppingCartService } from './services/shopping-cart.service';\nimport { UserService } from './services/user.service';\nimport { OrderDetailComponent } from './components/order-detail/order-detail.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [\n    ProductCardComponent,\n    ProductQuantityComponent,\n    OrderDetailComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    CustomFormsModule,\n    DataTableModule,\n    AppRoutingModule,\n    AngularFireAuthModule,\n    AngularFireDatabaseModule,\n    NgbModule,\n    RouterModule.forChild([\n      // routes for logged in users\n      {\n        path: 'order-detail/:id',\n        component: OrderDetailComponent,\n        canActivate: [AuthGuardService]\n      }\n    ])\n  ],\n  exports: [\n    ProductCardComponent,\n    ProductQuantityComponent,\n    OrderDetailComponent,\n    CommonModule,\n    FormsModule,\n    CustomFormsModule,\n    DataTableModule,\n    AppRoutingModule,\n    AngularFireAuthModule,\n    AngularFireDatabaseModule,\n    NgbModule\n  ],\n  providers: [\n    AuthService,\n    AuthGuardService,\n    UserService,\n    CategoryService,\n    ProductService,\n    ShoppingCartService,\n    OrderService\n  ]\n})\nexport class SharedModule {}\n","<h2>Shipping</h2>\n<div class=\"row\" *ngIf=\"cart$ | async as cart\">\n  <div class=\"col-6\">\n    <shipping-form [cart]=\"cart\"></shipping-form>\n  </div>\n  <div class=\"col-6\">\n    <shopping-cart-summary [cart]=\"cart\"></shopping-cart-summary>\n  </div>\n</div>\n","import { Observable } from 'rxjs';\nimport { ShoppingCartService } from '../../../shared/services/shopping-cart.service';\nimport { ShoppingCart } from '../../../shared/models/shopping-cart';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-check-out',\n  templateUrl: './check-out.component.html',\n  styleUrls: ['./check-out.component.css']\n})\nexport class CheckOutComponent implements OnInit {\n  cart$: Observable<ShoppingCart>;\n\n  constructor(private ShoppingCartService: ShoppingCartService) {}\n\n  async ngOnInit() {\n    this.cart$ = await this.ShoppingCartService.getCart();\n  }\n}\n","<h3>My Orders</h3>\n<div *ngIf=\"orders$ | async as orders\">\n  <ng-container *ngIf=\"orders.length; else orderInfo\">\n    <!-- <table class=\"table table-hover table-bordered\"> -->\n    <table class=\"table table-hover\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Address</th>\n          <th>Order Date</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let order of orders\">\n          <td>{{ order.shipping.name }}</td>\n          <td>\n            {{ order.shipping.address1\n            }}<span *ngIf=\"order.shipping.address2\"\n              >, {{ order.shipping.address2 }}</span\n            >\n          </td>\n          <td>{{ order.datePlaced | date: \"medium\" }}</td>\n          <td>\n            <a\n              [routerLink]=\"['/order-detail', order.$key]\"\n              class=\"btn btn-sm btn-primary\"\n            >\n              <i class=\"fa fa-eye\"></i>\n            </a>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n\n<ng-template #orderInfo>\n  <p class=\"alert alert-info\">You don't have any orders yet.</p>\n</ng-template>\n","import { switchMap } from 'rxjs/operators';\nimport { OrderService } from '../../../shared/services/order.service';\nimport { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../shared/services/auth.service';\n\n@Component({\n  selector: 'app-my-orders',\n  templateUrl: './my-orders.component.html',\n  styleUrls: ['./my-orders.component.css']\n})\nexport class MyOrdersComponent implements OnInit {\n  orders$;\n\n  constructor(private orderService: OrderService, private auth: AuthService) {\n    // this.orders$ = auth.user$.pipe(\n    //   switchMap(u => orderService.getOrdersByUser(u.uid))\n    // );\n  }\n\n  ngOnInit() {\n    this.orders$ = this.auth.user$.pipe(\n      switchMap(user => {\n        return this.orderService.getOrdersByUser(user.uid);\n      })\n    );\n  }\n}\n","<p>order-success works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-order-success',\n  templateUrl: './order-success.component.html',\n  styleUrls: ['./order-success.component.css']\n})\nexport class OrderSuccessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"sticky\">\n  <div class=\"card\" style=\"margin: 0px auto;\">\n    <div class=\"list-group list-group-flush\">\n      <a\n        routerLink=\"/\"\n        [class.active]=\"!category\"\n        class=\"list-group-item list-group-item-action\"\n        >All Categories</a\n      >\n      <a\n        routerLink=\"/\"\n        [queryParams]=\"{ category: c.key }\"\n        *ngFor=\"let c of categories$ | async\"\n        class=\"list-group-item list-group-item-action\"\n        [class.active]=\"category === c.key\"\n      >\n        {{ c.payload.val().name }}\n      </a>\n    </div>\n  </div>\n</div>\n","import { CategoryService } from '../../../../shared/services/category.service';\nimport { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'product-filter',\n  templateUrl: './product-filter.component.html',\n  styleUrls: ['./product-filter.component.css']\n})\nexport class ProductFilterComponent implements OnInit {\n  categories$;\n  @Input('category') category;\n\n  constructor(categoryService: CategoryService) {\n    this.categories$ = categoryService.getAll();\n  }\n\n  ngOnInit(): void {}\n}\n","<div class=\"row\">\n  <div class=\"col-md-3\">\n    <product-filter [category]=\"category\"></product-filter>\n  </div>\n  <div class=\"col-md-9\">\n    <div class=\"row\" *ngIf=\"cart$ | async as cart\">\n      <div *ngFor=\"let p of filteredProducts\" class=\"col-md-4\">\n        <product-card [product]=\"p\" [shopping-cart]=\"cart\"></product-card>\n      </div>\n    </div>\n  </div>\n</div>\n","import { ShoppingCartService } from '../../../shared/services/shopping-cart.service';\nimport { switchMap } from 'rxjs/operators';\nimport { Route, ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { ProductService } from '../../../shared/services/product.service';\nimport { Product } from '../../../shared/models/product';\nimport { Subscription, Observable } from 'rxjs';\nimport { ShoppingCart } from '../../../shared/models/shopping-cart';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n  products: Product[] = [];\n  category: string;\n  filteredProducts: Product[] = [];\n  cart$: Observable<ShoppingCart>;\n\n  constructor(\n    private productService: ProductService,\n    private route: ActivatedRoute,\n    private shoppingCartService: ShoppingCartService\n  ) {}\n\n  async ngOnInit() {\n    this.cart$ = await this.shoppingCartService.getCart(); // Used here because constructors cannot be async\n    this.populateProducts();\n  }\n\n  private populateProducts() {\n    this.productService\n      .getAll()\n      .pipe(\n        switchMap(products => {\n          this.products = products;\n          return this.route.queryParamMap;\n        })\n      )\n      .subscribe(params => {\n        this.category = params.get('category');\n        this.applyFilter();\n      });\n  }\n\n  private applyFilter() {\n    this.filteredProducts = this.category\n      ? this.products.filter(p => p.category === this.category)\n      : this.products;\n  }\n}\n","<form #f=\"ngForm\">\n  <div class=\"form-group\">\n    <label for=\"\">Name</label>\n    <input\n      #name=\"ngModel\"\n      ngModel\n      name=\"name\"\n      [(ngModel)]=\"shipping.name\"\n      type=\"text\"\n      class=\"form-control\"\n      required\n    />\n    <div *ngIf=\"name.touched && name.invalid\" class=\"alert alert-danger\">\n      <div *ngIf=\"name.errors.required\">Name is required.</div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"\">Address</label>\n    <input\n      #addressLine1=\"ngModel\"\n      ngModel\n      name=\"addressLine1\"\n      [(ngModel)]=\"shipping.addressLine1\"\n      placeholder=\"Line 1\"\n      type=\"text\"\n      class=\"form-control\"\n      required\n    />\n    <div\n      *ngIf=\"addressLine1.touched && addressLine1.invalid\"\n      class=\"alert alert-danger\"\n    >\n      <div *ngIf=\"addressLine1.errors.required\">\n        Address Line 1 is required.\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"\"></label>\n    <input\n      #addressLine2=\"ngModel\"\n      ngModel\n      name=\"addressLine2\"\n      [(ngModel)]=\"shipping.addressLine2\"\n      placeholder=\"Line 2\"\n      type=\"text\"\n      class=\"form-control\"\n      required\n    />\n    <div\n      *ngIf=\"addressLine2.touched && addressLine2.invalid\"\n      class=\"alert alert-danger\"\n    >\n      <div *ngIf=\"addressLine2.errors.required\">\n        Address Line 2 is required.\n      </div>\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"\">City</label>\n    <input\n      #city=\"ngModel\"\n      ngModel\n      name=\"city\"\n      [(ngModel)]=\"shipping.city\"\n      id=\"city\"\n      type=\"text\"\n      class=\"form-control\"\n      required\n    />\n    <div *ngIf=\"city.touched && city.invalid\" class=\"alert alert-danger\">\n      <div *ngIf=\"city.errors.required\">City is required.</div>\n    </div>\n  </div>\n  <button\n    [disabled]=\"!f.valid\"\n    (click)=\"placeOrder()\"\n    class=\"mar-b80 btn btn-primary\"\n  >\n    Place Order\n  </button>\n</form>\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { OrderService } from '../../../shared/services/order.service';\nimport { Order } from '../../../shared/models/order';\nimport { ShoppingCart } from '../../../shared/models/shopping-cart';\nimport { AuthService } from '../../../shared/services/auth.service';\n\n@Component({\n  selector: 'shipping-form',\n  templateUrl: './shipping-form.component.html',\n  styleUrls: ['./shipping-form.component.css']\n})\nexport class ShippingFormComponent implements OnInit, OnDestroy {\n  @Input('cart') cart: ShoppingCart;\n  shipping: any = {};\n  userId: string;\n  userSubscription: Subscription;\n\n  constructor(\n    private orderService: OrderService,\n    private auth: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.userSubscription = this.auth.user$.subscribe(\n      user => (this.userId = user.uid)\n    );\n  }\n\n  ngOnDestroy() {\n    this.userSubscription.unsubscribe();\n  }\n\n  async placeOrder() {\n    let order = new Order(this.userId, this.shipping, this.cart);\n    let result = await this.orderService.placeOrder(order);\n    this.router.navigate(['/order-success', result.key]);\n  }\n}\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <h5 class=\"card-title\">Order Summary</h5>\n    <p class=\"card-text\">\n      You have {{ cart.totalItemsCount }} items in your shopping cart.\n    </p>\n    <ul class=\"list-group list-group-flush\">\n      <li *ngFor=\"let item of cart.items\" class=\"list-group-item\">\n        {{ item.quantity }} x {{ item.title }}\n        <div class=\"float-right\">\n          {{ item.totalPrice | currency: \"USD\" }}\n        </div>\n      </li>\n      <li class=\"list-group-item font-weight-bold\">\n        Total\n        <div class=\"float-right\">\n          {{ cart.totalPrice | currency: \"USD\" }}\n        </div>\n      </li>\n    </ul>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { ShoppingCart } from '../../../shared/models/shopping-cart';\n\n@Component({\n  selector: 'shopping-cart-summary',\n  templateUrl: './shopping-cart-summary.component.html',\n  styleUrls: ['./shopping-cart-summary.component.css']\n})\nexport class ShoppingCartSummaryComponent {\n  @Input('cart') cart: ShoppingCart;\n\n  constructor() {}\n}\n","<h1>Shopping Cart</h1>\n<div class=\"card col-12 mar-b80\" *ngIf=\"cart$ | async as cart\">\n  <div class=\"card-body\">\n    <p>\n      You have {{ cart.totalItemsCount }} items in your cart.\n      <button\n        *ngIf=\"cart.items.length\"\n        (click)=\"clearCart()\"\n        class=\"float-right btn btn-light btn-sm\"\n      >\n        Clear Shopping Cart\n      </button>\n    </p>\n  </div>\n  <table class=\"table\">\n    <thead>\n      <tr>\n        <th></th>\n        <th>Product</th>\n        <th class=\"text-center\" style=\"width: 230px\">Quantity</th>\n        <th class=\"text-right\" style=\"width: 200px\">Price</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let item of cart.items\">\n        <div>\n          <img\n            [style.backgroundImage]=\"'url(' + item.imageUrl + ')'\"\n            class=\"thumbnail\"\n            alt=\"\"\n          />\n        </div>\n        <td>\n          {{ item.title }}\n        </td>\n        <td>\n          <product-quantity [product]=\"item\" [shopping-cart]=\"cart\">\n          </product-quantity>\n        </td>\n        <td class=\"text-right\">\n          {{ item.totalPrice | currency: \"USD\" }}\n        </td>\n      </tr>\n    </tbody>\n    <tfoot>\n      <tr>\n        <th></th>\n        <th></th>\n        <th></th>\n        <th class=\"text-right\">\n          {{ cart.totalPrice | currency: \"USD\" }}\n        </th>\n      </tr>\n      <tr>\n        <th colspan=\"4\">\n          <a\n            *ngIf=\"cart.items.length\"\n            routerLink=\"/check-out\"\n            class=\"btn btn-primary\"\n            >Check Out</a\n          >\n        </th>\n      </tr>\n    </tfoot>\n  </table>\n</div>\n","import { ShoppingCartService } from '../../../shared/services/shopping-cart.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ShoppingCart } from '../../../shared/models/shopping-cart';\n\n@Component({\n  selector: 'app-shopping-cart',\n  templateUrl: './shopping-cart.component.html',\n  styleUrls: ['./shopping-cart.component.css']\n})\nexport class ShoppingCartComponent implements OnInit {\n  cart$: Observable<ShoppingCart>;\n\n  constructor(private shoppingCartService: ShoppingCartService) {}\n\n  async ngOnInit() {\n    this.cart$ = await this.shoppingCartService.getCart();\n  }\n\n  clearCart() {\n    this.shoppingCartService.clearCart();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ProductsComponent } from './components/products/products.component';\nimport { ShoppingCartComponent } from './components/shopping-cart/shopping-cart.component';\nimport { CheckOutComponent } from './components/check-out/check-out.component';\nimport { OrderSuccessComponent } from './components/order-success/order-success.component';\nimport { MyOrdersComponent } from './components/my-orders/my-orders.component';\nimport { ProductFilterComponent } from './components/products/product-filter/product-filter.component';\nimport { ShoppingCartSummaryComponent } from './components/shopping-cart-summary/shopping-cart-summary.component';\nimport { ShippingFormComponent } from './components/shipping-form/shipping-form.component';\nimport { FormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared/shared.module';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuardService } from '../shared/services/auth-guard.service';\n\n@NgModule({\n  declarations: [\n    ProductsComponent,\n    ShoppingCartComponent,\n    CheckOutComponent,\n    OrderSuccessComponent,\n    MyOrdersComponent,\n    ProductFilterComponent,\n    ShoppingCartSummaryComponent,\n    ShippingFormComponent\n  ],\n  exports: [\n    // ShoppingCartComponent,\n    // ProductsComponent,\n    // ProductFilterComponent,\n    // ShoppingCartSummaryComponent\n  ],\n  providers: [],\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule,\n    RouterModule.forChild([\n      { path: 'products', component: ProductsComponent },\n      { path: 'shopping-cart', component: ShoppingCartComponent },\n      {\n        path: 'check-out',\n        component: CheckOutComponent,\n        canActivate: [AuthGuardService]\n      },\n      {\n        path: 'order-success/:id',\n        component: OrderSuccessComponent,\n        canActivate: [AuthGuardService]\n      },\n      {\n        path: 'my/orders',\n        component: MyOrdersComponent,\n        canActivate: [AuthGuardService]\n      }\n    ])\n  ]\n})\nexport class ShoppingModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyBlQwS1ObpTlPmLqThH8MvPHNbOH22_hMM',\n    authDomain: 'oshop-1aaeb.firebaseapp.com',\n    databaseURL: 'https://oshop-1aaeb.firebaseio.com',\n    projectId: 'oshop-1aaeb',\n    storageBucket: 'oshop-1aaeb.appspot.com',\n    messagingSenderId: '173413094429',\n    appId: '1:173413094429:web:685376106c1c8ba187a2f4',\n    measurementId: 'G-TSJFT1121G'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}